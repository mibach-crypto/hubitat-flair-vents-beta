plugins {
    id 'groovy'
    id 'jacoco'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileGroovy {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileTestGroovy {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src']
        }
    }
    test {`r`n    useJUnitPlatform()
        groovy {
            srcDirs = ['src/test/groovy/app/lifecycle', 'src/test/groovy/app/imports']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

tasks.named('compileGroovy') {
    enabled = false
}

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.verbose = true
    groovyOptions.fork = true
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    finalizedBy jacocoTestCoverageVerification

    sourceDirectories.from = sourceSets.main.allSource.srcDirs
    classDirectories.from = sourceSets.main.output

    executionData.from = fileTree(dir: "$buildDir/jacoco", includes: ['**/*.exec'])

    doFirst {
        println "JaCoCo execution data files found:"
        executionData.files.each { file ->
            if (file.exists()) {
                println "  - ${file.absolutePath} (${file.length()} bytes)"
            } else {
                println "  - ${file.absolutePath} (NOT FOUND)"
            }
        }
        println "Source directories:"
        sourceDirectories.files.each { dir -> println "  - ${dir.absolutePath}" }
        println "Class directories:"
        classDirectories.files.each { dir -> println "  - ${dir.absolutePath}" }
    }
}

test {`r`n    useJUnitPlatform()
    ignoreFailures = true
    finalizedBy jacocoTestReport

    systemProperty 'jacoco.destfile', "$buildDir/jacoco/test.exec"
    systemProperty 'jacoco.append', 'false'
    systemProperty 'jacoco.includes', '**'
    systemProperty 'jacoco.excludes', ''

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = false
    }

    scanForTestClasses = true
    include '**/*Test.class'
    include '**/*Tests.class'
    include '**/*Spec.class'

    exclude '**/perf/**/*Spec.class'
}

task slowTest(type: Test) {
    description = 'Runs slow tests including performance tests'
    group = 'verification'

    ignoreFailures = true
    finalizedBy jacocoTestReport

    systemProperty 'jacoco.destfile', "$buildDir/jacoco/slowTest.exec"
    systemProperty 'jacoco.append', 'false'

    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }

    include '**/perf/**/*Spec.class'
    scanForTestClasses = true
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        failOnViolation = false
        rule {
            limit { minimum = 0.60 }
        }
        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.50
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo1.maven.org/maven2/' }
    // Optional: Azure DevOps feed for alternate hubitat_ci hosting
    maven {
        url 'https://biocomp.pkgs.visualstudio.com/HubitatCiRelease/_packaging/hubitat_ci_feed@Release/maven/v1'
    }
}
dependencies {
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'
    implementation 'org.codehaus.groovy:groovy-dateutil:3.0.9'
    implementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'

    testImplementation 'org.codehaus.groovy:groovy-all:3.0.9'
    testImplementation "org.spockframework:spock-core:2.0-groovy-3.0"
    testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testImplementation 'net.bytebuddy:byte-buddy:1.12.18'
    testImplementation 'junit:junit:4.13.2'
}
